# -- Functions

# Create a new directory and enter it
mkd() { mkdir -p "$@" && cd "$@"; }

# Open man page as PDF
manpdf() { man -t "${1}" | open -f -a /Applications/Preview.app/; }

# Display all ip addresses for this host
ips() { ifconfig | awk '/inet /{ print $2 }'; }

# Displays your ip address, as seen by the Internet
myip() {
    res=$(curl -s checkip.dyndns.org | grep -Eo '[0-9\.]+')
    echo -e "Your public IP is: \033[0;33m$res\033[0m"
}

# Checks whether a website is down for you, or everybody
down4me() { curl -s "http://www.downforeveryoneorjustme.com/$1" | sed '/just you/!d;s/<[^>]*>//g'; }

# Create a data URL from a file
dataurl() {
    local mimeType=$(file -b --mime-type "$1");
    if [[ $mimeType == text/* ]]; then
        mimeType="${mimeType};charset=utf-8";
    fi
    echo "data:${mimeType};base64,$(openssl base64 -in "$1" | tr -d '\n')";
}

# `s` with no arguments opens the current directory in Sublime Text, otherwise opens the given location
s() {
    if [ $# -eq 0 ]; then
        subl .;
    else
        subl "$@";
    fi;
}

# `a` with no arguments opens the current directory in Atom Editor, otherwise opens the given location
a() {
    if [ $# -eq 0 ]; then
        atom .;
    else
        atom "$@";
    fi;
}

# `o` with no arguments opens the current directory, otherwise opens the given location
o() {
    if [ $# -eq 0 ]; then
        open .;
    else
        open "$@";
    fi;
}

# project : if there's a sublime-project file here, opens it, if not, opens the folder in sublime
project() {
    PROJECT=$(ls -1 $1 | grep "sublime-project")
    if [[ $? -eq 0 && $# -lt 2 ]]; then
        subl -n --project "${1-.}/$PROJECT"
    else
        subl -n -a ${@-./}
    fi
}

# gclone : clone a github repo by passing the user/repo tuple
gclone() { git clone https://github.com/$1 $2; }

# depo : try to change directory to github repo, with user/repo, from the WORKS_PATH
depo() { eval cd "${WORKS_PATH}/${1}"; }

_depo_complete() {
    local word="${COMP_WORDS[COMP_CWORD]}"
    local base_path="$WORKS_PATH"
    compopt -o nospace
    if [[ "$word" == *\/* ]]
    then
        if [[ "${word#${word%?}}" == '/' ]]
        then
            base_path="$WORKS_PATH/$word"
            COMPREPLY=( $(compgen -o nospace -P "$word" -W "$(eval ls $base_path)" ) )
        else
            base_path="$WORKS_PATH/$(dirname $word)"
            COMPREPLY=( $(compgen -o nospace -P "$(dirname $word)/" -W "$(eval ls $base_path)" -- "$(basename $word)" ) )
        fi
    else
        COMPREPLY=( $(compgen -o nospace -S / -W "$(eval ls $base_path)" -- "$word" ) )
    fi
}

complete -F _depo_complete depo

# obit : open atom from a directory entered like for the depo function

obit() { eval atom "${WORKS_PATH}/${1}"; }

_obit_complete() {
    local word="${COMP_WORDS[COMP_CWORD]}"
    local base_path="$WORKS_PATH"
    compopt -o nospace
    if [[ "$word" == *\/* ]]
    then
        if [[ "${word#${word%?}}" == '/' ]]
        then
            base_path="$WORKS_PATH/$word"
            COMPREPLY=( $(compgen -o nospace -P "$word" -W "$(eval ls $base_path)" ) )
        else
            base_path="$WORKS_PATH/$(dirname $word)"
            COMPREPLY=( $(compgen -o nospace -P "$(dirname $word)/" -W "$(eval ls $base_path)" -- "$(basename $word)" ) )
        fi
    else
        COMPREPLY=( $(compgen -o nospace -S / -W "$(eval ls $base_path)" -- "$word" ) )
    fi
}

complete -F _obit_complete obit
